{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport axios from \"axios\";\nexport const useHttp = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = \"GET\", data = null, headers = {}) => {\n    setLoading(true);\n\n    try {\n      const response = await axios(url, {\n        method,\n        data,\n        headers\n      });\n      const dataResp = response.data;\n      console.log(dataResp);\n\n      if (!response.statusText === \"\") {\n        console.error(dataResp.message || \"Something went wrong\");\n        throw new Error(dataResp.message || \"Something went wrong\");\n      }\n\n      setLoading(false);\n      return data;\n    } catch (error) {\n      setLoading(false);\n      setError(error.message);\n      throw error;\n    }\n  }, []);\n  const clearError = useCallback(() => setError(null), []);\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};\n\n_s(useHttp, \"wBqGcGl6EafFNGt940fH8x5vtvA=\");","map":{"version":3,"sources":["/Users/dmitry/Desktop/link_shortner/client/src/hooks/http.hook.js"],"names":["useState","useCallback","axios","useHttp","loading","setLoading","error","setError","request","url","method","data","headers","response","dataResp","console","log","statusText","message","Error","clearError"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMQ,OAAO,GAAGP,WAAW,CACzB,OAAOQ,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAAI,GAAG,IAAnC,EAAyCC,OAAO,GAAG,EAAnD,KAA0D;AACxDP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF,YAAMQ,QAAQ,GAAG,MAAMX,KAAK,CAACO,GAAD,EAAM;AAChCC,QAAAA,MADgC;AAEhCC,QAAAA,IAFgC;AAGhCC,QAAAA;AAHgC,OAAN,CAA5B;AAKA,YAAME,QAAQ,GAAGD,QAAQ,CAACF,IAA1B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAEA,UAAI,CAACD,QAAQ,CAACI,UAAV,KAAyB,EAA7B,EAAiC;AAC/BF,QAAAA,OAAO,CAACT,KAAR,CAAcQ,QAAQ,CAACI,OAAT,IAAoB,sBAAlC;AACA,cAAM,IAAIC,KAAJ,CAAUL,QAAQ,CAACI,OAAT,IAAoB,sBAA9B,CAAN;AACD;;AAEDb,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,aAAOM,IAAP;AACD,KAjBD,CAiBE,OAAOL,KAAP,EAAc;AACdD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,KAAK,CAACY,OAAP,CAAR;AACA,YAAMZ,KAAN;AACD;AACF,GAzBwB,EA0BzB,EA1ByB,CAA3B;AA6BA,QAAMc,UAAU,GAAGnB,WAAW,CAAC,MAAMM,QAAQ,CAAC,IAAD,CAAf,EAAuB,EAAvB,CAA9B;AAEA,SAAO;AAAEH,IAAAA,OAAF;AAAWI,IAAAA,OAAX;AAAoBF,IAAAA,KAApB;AAA2Bc,IAAAA;AAA3B,GAAP;AACD,CApCM;;GAAMjB,O","sourcesContent":["import { useState, useCallback } from \"react\";\nimport axios from \"axios\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (url, method = \"GET\", data = null, headers = {}) => {\n      setLoading(true);\n      try {\n        const response = await axios(url, {\n          method,\n          data,\n          headers,\n        });\n        const dataResp = response.data;\n        console.log(dataResp);\n\n        if (!response.statusText === \"\") {\n          console.error(dataResp.message || \"Something went wrong\");\n          throw new Error(dataResp.message || \"Something went wrong\");\n        }\n\n        setLoading(false);\n\n        return data;\n      } catch (error) {\n        setLoading(false);\n        setError(error.message);\n        throw error;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => setError(null), []);\n\n  return { loading, request, error, clearError };\n};\n"]},"metadata":{},"sourceType":"module"}