{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = \"GET\", data = null, headers = {}) => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(url, {\n        method,\n        data,\n        headers\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        console.error(data.message || \"Something went wrong\");\n        throw new Error(data.message || \"Something went wrong\");\n      }\n\n      setLoading(false);\n      return data;\n    } catch (error) {\n      setLoading(false);\n      setError(error.message);\n      throw error;\n    }\n  }, []);\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};\n\n_s(useHttp, \"MstwQpYZpw83DP6eQvw4fjC0Jxg=\");","map":{"version":3,"sources":["/Users/dmitry/Desktop/link_shortner/client/src/hooks/http.hook.js"],"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","data","headers","response","fetch","json","ok","console","message","Error","clearError"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMO,OAAO,GAAGN,WAAW,CACzB,OAAOO,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAAI,GAAG,IAAnC,EAAyCC,OAAO,GAAG,EAAnD,KAA0D;AACxDP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAChCC,QAAAA,MADgC;AAEhCC,QAAAA,IAFgC;AAGhCC,QAAAA;AAHgC,OAAN,CAA5B;AAKA,YAAMD,IAAI,GAAG,MAAME,QAAQ,CAACE,IAAT,EAAnB;;AAEA,UAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;AAChBC,QAAAA,OAAO,CAACX,KAAR,CAAcK,IAAI,CAACO,OAAL,IAAgB,sBAA9B;AACA,cAAM,IAAIC,KAAJ,CAAUR,IAAI,CAACO,OAAL,IAAgB,sBAA1B,CAAN;AACD;;AAEDb,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,aAAOM,IAAP;AACD,KAhBD,CAgBE,OAAOL,KAAP,EAAc;AACdD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,KAAK,CAACY,OAAP,CAAR;AACA,YAAMZ,KAAN;AACD;AACF,GAxBwB,EAyBzB,EAzByB,CAA3B;;AA4BA,QAAMc,UAAU,GAAG,MAAM;AACvBb,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAIA,SAAO;AAAEH,IAAAA,OAAF;AAAWI,IAAAA,OAAX;AAAoBF,IAAAA,KAApB;AAA2Bc,IAAAA;AAA3B,GAAP;AACD,CArCM;;GAAMjB,O","sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (url, method = \"GET\", data = null, headers = {}) => {\n      setLoading(true);\n      try {\n        const response = await fetch(url, {\n          method,\n          data,\n          headers,\n        });\n        const data = await response.json();\n\n        if (!response.ok) {\n          console.error(data.message || \"Something went wrong\");\n          throw new Error(data.message || \"Something went wrong\");\n        }\n\n        setLoading(false);\n\n        return data;\n      } catch (error) {\n        setLoading(false);\n        setError(error.message);\n        throw error;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  return { loading, request, error, clearError };\n};\n"]},"metadata":{},"sourceType":"module"}